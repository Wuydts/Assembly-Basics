%include "/usr/share/csc314/asm_io.inc"


segment .data
	enter_values	db	"Enter 10 values",10,0

segment .bss

	mycounter	resd	1
	myArr		resd	10

segment .text
	global  asm_main

asm_main:
	enter	0,0
	pusha
	;***************CODE STARTS HERE***************************
	mov		eax,enter_values
	call	print_string

	; Loop to read iin 10 values into my Array

	mov		DWORD[mycounter], 0

	read_values_loop:

	cmp		DWORD[mycounter], 10
	jge		read_values_end; Jump if greater then or equal

	; otherwise...

		call	read_int
		mov		ebx, DWORD[mycounter]
		mov		DWORD[myArr + ebx * 4], eax
		inc		DWORD[mycounter]

		jmp		read_values_loop


	read_values_end:


	; print out to make sure it works

	mov	ecx, 0

	print_loop:

	cmp		ecx, 10
	jge		print_loop_end ; once greater then 10 jump out

		mov		eax, DWORD[myArr + ecx * 4]
		call	print_int
		call	print_nl
		inc 	ecx

		jmp		print_loop

	print_loop_end:
	






	;***************CODE ENDS HERE*****************************
	popa
	mov	eax, 0
	leave
	ret
